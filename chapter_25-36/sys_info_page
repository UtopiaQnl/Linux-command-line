#!/usr/bin/env bash

PROGNAME="$(basename "$0")"
TITLE="System Information Report For $HOSTNAME"
CURRENT_TIME="$(date +"%x %r %z")"
TIME_STAMP="Generated $CURRENT_TIME, by $USER"


function report_uptime() {
    cat <<_EOF_
<h2>System Uptime</h2>
        <pre>$(uptime)</pre>
_EOF_
    return
}

function report_disk_space() {
    cat <<_EOF_
<h2>Disk Space Utilization</h2>
        <pre>$(df -h)</pre>
_EOF_
    return
}

function report_home_space() {
    if [[ $(id -u) -eq 0 ]]; then # if start from root (uid is 0)
        cat <<-EOF
<h2>Home Space Utilization (All Users)</h2>
        <pre>$(du -sh /home/* 2>/dev/null)</pre>
EOF
    else
        cat <<-EOF
<h2>Home Space Utilization ($USER)</h2>
        <pre>$(du -sh "$HOME")</pre>
EOF
    fi
    return
}

function usage() {
    echo "$PROGNAME: usage: $PROGNAME [-f file | -i]"
    return
}

function write_html_page() {
    cat <<-_EOF_
<html>
    <head>
        <title>$TITLE</title>
    </head>
    <body>
        <h1>$TITLE</h1>
        <p>$TIME_STAMP</p>
        $(report_uptime)
        $(report_disk_space)
        $(report_home_space)
    </body>
</html>
_EOF_
}


interactive=
filename=
while [[ -n "$1" ]]; do
    case "$1" in
    -f | --file)
        shift
        filename="$1"
        ;;
    -i | --interactive)
        interactive=1
        ;;
    -h | --help)
        usage
        exit
        ;;
    *)
        usage >&2
        exit 1
        ;;
    esac
    shift
done

if [[ -n "$interactive" ]]; then
    while true; do
        read -rp "Enter name of output file: " filename
        if [[ -e "$filename" ]]; then
            read -rp "'$filename' exists. Overwrite? [y/n/q]: "
            case "$REPLY" in
            y | Y | yes | YES)
                break
                ;;
            Q | q | quit | exit | QUIT | EXIT)
                echo "Program terminated."
                exit
                ;;
            *)
                continue
                ;;
            esac
        elif [[ -z "$filename" ]]; then
            continue
        else
            break
        fi
    done
fi

if [[ -n "$filename" ]]; then
    if touch "$filename" && [[ -f "$filename" ]]; then
        write_html_page >"$filename"
    else
        echo "$PROGNAME: Cannot write file '$filename'" >&2
        exit 1
    fi
else
    write_html_page
fi
